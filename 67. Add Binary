/**
 * @param {string} a
 * @param {string} b
 * @return {string}
 */
var addBinary = function(a, b) {
    let result=[]
    let len = Math.max(a.length, b.length);
    let aIndex = a.length-1;
    let bIndex = b.length-1;
    let addOne = 0;
    for(i=len-1;i>=0;i--){
        //console.log(a.charAt(aIndex),b.charAt(bIndex));
        let temp = Number(a.charAt(aIndex))+ Number(b.charAt(bIndex))
        //console.log("temp",temp,"addOne",addOne)
        if(addOne == 0){
            if(temp < 2){
                result.unshift(temp);
            }else{
                result.unshift(0);// 1+1 case
                addOne = 1;
            }
        }else{
            //case of addOne =1
            if(temp==2){
                result.unshift(1);//and addOne still 1
            }else if(temp==1){
                result.unshift(0);//and addOne still 1
            }else{
                result.unshift(1);
                addOne = 0;//reset addOne
            }
        }
        aIndex--;
        bIndex--;
    }
    if(addOne == 1){
        result.unshift(1);
    }
    return result.join('')
};

/* better answer
var addBinary = function(a, b) {
    var res=""
    var m=a.length
    var n=b.length
    var carry=0
    while(m>0 || n>0){
        var k=m>0?+a[m-1]:0
        var p=n>0?+b[n-1]:0
        var sum=k+p+carry
        var carry=Math.floor(sum/2)
        var res=sum%2+res
        m--
        n--
    }
    if(carry){
        return "1"+res
    }
    return res
};
*/
