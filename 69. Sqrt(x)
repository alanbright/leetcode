var mySqrt = function(x) {
    if(x==0) return 0;
    [left, right] = [0, x];
    //console.log(left, right)
    while(left <= right){
        let mid = Math.floor((right + left)/2)
        //console.log("mid",mid);
        if (mid*mid <= x && x < (mid+1)*(mid+1)){
            //console.log("mid*mid",mid*mid,"(mid+1)*(mid+1)",(mid+1)*(mid+1));
            return mid
        }else if(x < mid*mid){
            right = mid;
        }else{
            left = mid+1; // https://leetcode.com/problems/sqrtx/discuss/25047/A-Binary-Search-Solution
        }
    }
};

/*
still dont know why need to do left = mid+1 ??
because mid*mid <= x (there is an equal)
and mid*mid > x case, the left value is not possible to be answer. (only could be smaller than answer
so we can add 1 to speed up. if we don't do this, submit will be timeout

https://leetcode.com/problems/sqrtx/discuss/25057/3-4-short-lines-Integer-Newton-Every-Language
https://leetcode.com/problems/sqrtx/discuss/25255/Newton's-Iterative-Method-in-C%2B%2B


*/
